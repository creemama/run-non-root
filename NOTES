https://img.shields.io/github/tag/creemama/run-non-root.svg?style=flat-square

// https://docs.docker.com/engine/reference/commandline/run/#options
-i, --init Run an init inside the container that forwards signals and reaps processes; This matches the docker run option of the same name.
-r, --system Create a system group or a system user if we call groupadd or useradd.
-G, --groups

# Run id as as yourself.
run-non-root -f $(id -gn) -g $(id -g) -t $(id -nu) -u $(id -u) -- id

test_options \
  "foo bar" \
  "-dq" \
  "${os}" \
  "" \
  "sh -c \"echo \\''foo bar\\''\""
exit

FAILING
test_options \
  "nonroot" \
  "-dq" \
  "${os}" \
  "" \
  "sh -c \"echo 'foo bar'\""

# PSEUDOCODE
#
# If RUN_NON_ROOT_UID exists:
#   UID=RUN_NON_ROOT_UID
#   USERNAME=the username associated with the user ID
#   RUN_NON_ROOT_USERNAME is ignored.
#   Warn if RUN_NON_ROOT_USERNAME is set and RUN_NON_ROOT_USERNAME != USERNAME.
#
# If RUN_NON_ROOT_UID does not exist,
#   If RUN_NON_ROOT_USERNAME exists:
#     UID=the user ID associated with USERNAME
#     USERNAME=RUN_NON_ROOT_USERNAME
#     RUN_NON_ROOT_UID is ignored.
#     Warn if RUN_NON_ROOT_UID is set and RUN_NON_ROOT_UID != UID.
#
#   If RUN_NON_ROOT_USERNAME does not exist:
#     If RUN_NON_ROOT_UID is set:
#       UID=RUN_NON_ROOT_UID
#     If RUN_NON_ROOT_UID is not set:
#       UID=let useradd decide, setting --system if applicable
#     If RUN_NON_ROOT_USERNAME is set:
#       USERNAME=RUN_NON_ROOT_USERNAME
#     If RUN_NON_ROOT_USERNAME is not set:
#       USERNAME=nonroot
#
# If RUN_NON_ROOT_GID exists:
#   GID=RUN_NON_ROOT_GID
#   GROUP_NAME=the group name associated with the group ID
#   RUN_NON_ROOT_GROUP_NAME is ignored.
#   Warn if RUN_NON_ROOT_GROUP_NAME is set and RUN_NON_ROOT_GROUP_NAME != GROUP_NAME.
#   Warn if UID is not part of the group.
#
# If RUN_NON_ROOT_GID does not exist:
#   If RUN_NON_ROOT_GROUP_NAME exists,
#     GID=the group ID associated with the group name
#     GROUP_NAME=RUN_NON_ROOT_GROUP_NAME
#     RUN_NON_ROOT_GID is ignored.
#     Warn if RUN_NON_ROOT_GID is set and RUN_NON_ROOT_GID != GID.
#     Warn if UID is not part of the group.
#
#   If RUN_NON_ROOT_GROUP_NAME does not exist:
#     If RUN_NON_ROOT_GROUP_NAME is set:
#       GROUP_NAME=RUN_NON_ROOT_GROUP_NAME
#     If RUN_NON_ROOT_GROUP_NAME is not set:
#       If GROUP_NAME with the value of USERNAME exists:
#         GROUP_NAME=nonroot
#       If GROUP_NAME with the value of USERNAME does not exist:
#         GROUP_NAME=USERNAME
#
#     If RUN_NON_ROOT_GID is set:
#       GID=RUN_NON_ROOT_GID
#     If RUN_NON_ROOT_GID is not set:
#       If GID with the value of UID exists:
#         GID=let groupadd decide, setting --system if applicable
#       If GID with the value of UID does not exist:
#         GID=UID


https://github.com/tianon/gosu
https://github.com/krallin/tini

As we



docker run --rm -it centos:7.4.1708 sh

https://github.com/ncopa/su-exec

According to

## Run `node` as the `node` user

```sh
docker run \
  -it \
  --rm \
  node:10.5.0-alpine \
  sh -c "wget -O /usr/local/bin/run-non-root https://raw.githubusercontent.com/creemama/run-non-root/master/run-non-root.sh &&
    chmod +x /usr/local/bin/run-non-root &&
    ln /usr/local/bin/node /usr/bin/node &&
    run-non-root --uname node node"
# Running node as uid=1000(node) gid=1000(node) groups=1000(node),1000(node) ...
```

```
docker run   -it   --rm   node:10.5.0-alpine   sh -c "apk update &&
    apk add curl --no-cache &&
    curl -L https://raw.githubusercontent.com/creemama/run-non-root/master/run-non-root.sh -o /usr/local/bin/run-non-root &&
    chmod +x /usr/local/bin/run-non-root &&
    ln /usr/local/bin/node /usr/bin/node &&
    run-non-root --uname node ps aux"
```

# Run on [Debian](https://hub.docker.com/_/debian/)
```sh
docker run -it --rm debian:9.5 sh -c \
  "apt-get update &&
  apt-get install -y curl procps &&
  curl -L https://raw.githubusercontent.com/creemama/run-non-root/update/run-non-root.sh -o /usr/local/bin/run-non-root &&
  chmod +x /usr/local/bin/run-non-root &&
  run-non-root -- ps aux"
```
